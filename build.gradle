plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
//    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // QUERYDSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
}

// === ⭐ QueryDsl 빌드 옵션 (선택) : generated/querydsl 디렉토리의 하위 파일도 컴파일/빌드할 소스 파일로 포함시킴 ===
// 컴파일 시점에 querydsl 폴더가 생성되기 때문에 다시 컴파일 시킬 때 같이 포함시키도록 함.
def querydslDir = layout.buildDirectory.dir("generated/querydsl").get().asFile
sourceSets {
    main.java.srcDirs += [ querydslDir ]
}

tasks.withType(JavaCompile) {
    options.compilerArgs = [
            '-s', querydslDir
    ]
}

compileJava.dependsOn(clean)

// 명시적으로 clean 할때 generated 하위 파일들도 같이 삭제하도록 명시
clean {
    delete file('src/main/generated')
}

tasks.named('test') {
    useJUnitPlatform()
}
